



Open questions Causal (WORK IN PROGRESS!)

Ordenació FIFO: VC[FromId] +1
Ordenació causal: match vector clocks.
Ordenació total: nope, contraexemple.



Experiments Total (ii) - quantification part

totalMessages(n = |workers|) 
Basic = 1 x send + n x multicast + n x deliver = 2n +1
Total = 1 x send + n x request + n x proposal + n x agreed + n x deliver = 4n +1



Open questions Total

Ordenació FIFO: no, la posició de cada missatge depén del jitter amb que arriba als processos, no és determinista. La pista és que els processos no tenen una ordenació interna dels missatges que envien, a diferencia del que teniem en la versió causal, on estava implicita en els timestamps de cada missatge.

Ordenació causal: no, també depén dels jitters. No hem establert cap relació de happened-before entre missatges (com ho poden ser els VC de la versió causal.) Tampoc apareix com a efecte colateral de l'utilització dels numeros de seqüencia.

Ordenació total: sí. Ho demostrarem a partir de dues propietats:
1) El número de seqüencia (nSeq en endavant) d'un missatge és únic en el sistema, i idèntic en tots els processos.
Sí un procés ja ha proposat un nSeq ns, els següent que proposi sera com a mínim ns+1. És per assegurar aquest punt que cada procés porta el compte de quin és el màxim nSeq que ha proposat fins al moment.
A més, com dos processos poden proposar el mateix nSeq per a dos missatges diferents, s'afegeix l'identificador del procés en els nSeq. Com un procés no proposarà el mateix nSeq dos cops, llavors tenim unicitat en els nSeq. En perspectiva: per assegurar-nos que tenim unicitat en els nSeq acordats, forcem unicitat en els nSeq proposats.
La segona part, que el nSeq d'un missatge és idèntic en tots els processos, és deriva del missatge d'agreement que el emissor envia a tots els processos, comunicant el nSeq acordat.

2) Els missatges s'entreguen en ordre de nSeq.
Aquesta propietat es compleix per la manera en que s'ordena la hold-back queue. Si un missatge m1 amb nSeq a1 acordat precedeix un altre missagte m2 llavors:
a) Si m2 té un nSeq acordat a2, llavors a1 < a2 per l'ordenació de la cua.
b) Si m2 no té un nSeq acordat, llavors té un nSeq proposat p2 tal que a1 < p2. Per la manera com decidim el nSeq acordat (màxim dels proposats), sabem que m2 pendrà un nSeq a2  >= p2 i per tant, a1 < a2.
La cua només es pot buidar treient el primer element si aquest té un nSeq acordat. Com els missatges estan ordenats en ordre de mínim nSeq prospectiu, llavors els missatges s'entreguen en ordre de nSeq.
